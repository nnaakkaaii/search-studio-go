scalar DateTime
type Query {
    studio(id: Int!): Studio
    studios(studio_name: String): [Studio]
}
# type Mutation {
#     createStudio(input: CreateStudioInput!): CreateStudioPayload!
#     updateStudio(input: UpdateStudioInput!): UpdateStudioPayload!
# }
type Studio {
    studio_id: ID!
    studio_name: String!
    introduction: String
    precaution: String
    homepage_url: String
    contact: String!
    address: Address!
    rent_by_min_hours: Float!
    can_free_cancel: Boolean
    studio_facilities: [StudioFacility]  # 紐付けテーブル
    studio_amenities: [StudioAmenity]
    studio_payment: StudioPayment
    studio_reservation: StudioReservation
    studio_images: [StudioImage]
    studio_access_by_station: StudioAccessByStation
}
type Address {
    address_id: ID!
    address_name: String!
    city: City!
}
type City {
    city_id: ID!
    city_name: String!
    prefecture: Prefecture!
}
type Prefecture {
    prefecture_id: ID!
    prefecture_name: String!
}
type StudioFacility {
    studio_facility_id: ID!
    facility: Facility!
    studio_facility_count: Int
    studio_facility_price: Float
    studio_facility_unit_hour: Float
    created_at: DateTime!
    updated_at: DateTime!
    deleted_at: DateTime
    is_deleted: Boolean
}
type Facility {
    facility_id: ID!
    facility_name: String!
}
type StudioAmenity {
    studio_amenity_id: ID!
    amenity: Amenity!
    studio_amenity_count: Int
    studio_amenity_price: Float
    studio_amenity_unit_hour: Float
    created_at: DateTime!
    updated_at: DateTime!
    deleted_at: DateTime
    is_deleted: Boolean
}
type Amenity {
    amenity_id: ID!
    amenity_name: String!
}
type StudioPayment {
    studio_payment_id: ID!
    payment: Payment!
    created_at: DateTime!
    updated_at: DateTime!
    deleted_at: DateTime
    is_deleted: Boolean
}
type Payment {
    payment_id: ID!
    payment_name: String!
}
type StudioReservation {
    studio_reservation_id: ID!
    reservation: Reservation!
    created_at: DateTime!
    updated_at: DateTime!
    deleted_at: DateTime
    is_deleted: Boolean
}
type Reservation {
    reservation_id: ID!
    reservation_name: String!
}
type StudioImage {
    studio_image_id: ID!
    image: Image!
    description: String
}
type Image {
    image_id: ID!
    image_name: String!
    image_path: String!
    created_at: DateTime!
    updated_at: DateTime!
    deleted_at: DateTime
    is_deleted: Boolean
}
type StudioAccessByStation {
    studio_access_by_station_id: ID!
    station_railway_exit_link: StationRailwayExitLink!
    minutes_from_station: Int
    created_at: DateTime!
    updated_at: DateTime!
    deleted_at: DateTime
    is_deleted: Boolean
}
type StationRailwayExitLink {
    station_railway_exit_link_id: ID!
    station_railway_link: StationRailwayLink
    exit: Exit!
}
type StationRailwayLink {
    station_railway_link_id: ID!
    station: Station!
    railway: Railway!
}
type Exit {
    exit_id: ID!
    exit_name: String!
}
type Station {
    station_id: ID!
    station_name: String!
}
type Railway {
    railway_id: ID!
    railway_name: String!
}